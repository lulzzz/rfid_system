//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.3082.
// 
namespace ClsRampdb.RConnection {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RConnectionSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class RConnection : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public RConnection() {
            this.Url = "http://vijay/rampService/RConnection.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLogin(string UserName, string Password) {
            object[] results = this.Invoke("GetLogin", new object[] {
                        UserName,
                        Password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLogin(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLogin", new object[] {
                        UserName,
                        Password}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/runQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void runQuery(string sqlText) {
            this.Invoke("runQuery", new object[] {
                        sqlText});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrunQuery(string sqlText, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("runQuery", new object[] {
                        sqlText}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndrunQuery(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecQuery(string cmdStr, object[] keys, object[] values) {
            object[] results = this.Invoke("ExecQuery", new object[] {
                        cmdStr,
                        keys,
                        values});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecQuery(string cmdStr, object[] keys, object[] values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecQuery", new object[] {
                        cmdStr,
                        keys,
                        values}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndExecQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getDataTable(string sqlText) {
            object[] results = this.Invoke("getDataTable", new object[] {
                        sqlText});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDataTable(string sqlText, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDataTable", new object[] {
                        sqlText}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndgetDataTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getScalerValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getScalerValue(string sqlText) {
            object[] results = this.Invoke("getScalerValue", new object[] {
                        sqlText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetScalerValue(string sqlText, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getScalerValue", new object[] {
                        sqlText}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetScalerValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
